# SPDX-License-Identifier: BSD-2-Clause

load("@rules_python//python:defs.bzl", "py_binary")
load("//tools:defs.bzl", "bazel_lint_test", "py_lint_test")

exports_files([
    "black_main.py",
    "isort_main.py",
    "pycodestyle_main.py",
])

config_setting(
    name = "darwin-amd64",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:x86_64",
    ],
)

config_setting(
    name = "darwin-arm64",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:arm64",
    ],
)

config_setting(
    name = "linux-amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

config_setting(
    name = "linux-arm64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
)

alias(
    name = "buildifier",
    actual = select({
        ":darwin-amd64": "@buildifier-darwin-amd64//file:downloaded",
        ":darwin-arm64": "@buildifier-darwin-arm64//file:downloaded",
        ":linux-amd64": "@buildifier-linux-amd64//file:downloaded",
        ":linux-arm64": "@buildifier-linux-arm64//file:downloaded",
        "//conditions:default": "@platforms//:incompatible",
    }),
    visibility = ["//:__subpackages__"],
)

py_binary(
    name = "black",
    testonly = True,
    srcs = ["black_main.py"],
    main = "black_main.py",
    tags = ["manual"],
    deps = ["@test_requirements_black//:pkg"],
)

py_binary(
    name = "pycodestyle",
    testonly = True,
    srcs = ["pycodestyle_main.py"],
    main = "pycodestyle_main.py",
    tags = ["manual"],
    deps = ["@test_requirements_pycodestyle//:pkg"],
)

py_binary(
    name = "isort",
    testonly = True,
    srcs = ["isort_main.py"],
    main = "isort_main.py",
    tags = ["manual"],
    deps = ["@test_requirements_isort//:pkg"],
)

bazel_lint_test(
    name = "bazel_lint_test",
    srcs = [
        "BUILD.bazel",
        "defs.bzl",
    ],
)

py_lint_test(
    name = "py_lint_test",
    srcs = [
        "black_main.py",
        "isort_main.py",
        "pycodestyle_main.py",
        "requirements_upgrade_bazel.py",
    ],
)
