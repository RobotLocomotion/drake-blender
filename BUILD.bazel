# SPDX-License-Identifier: BSD-2-Clause

load("@rules_python//python:defs.bzl", "py_binary", "py_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load(":defs.bzl", "pycodestyle_test")

exports_files(["server.py"])

py_binary(
    name = "server",
    srcs = ["server.py"],
    visibility = ["//visibility:public"],
    deps = [
        "@requirements_bpy//:pkg",
        "@requirements_flask//:pkg",
    ],
)

py_library(
    name = "unittest_path_cleaner",
    srcs = ["test/unittest_path_cleaner.py"],
)

py_test(
    name = "server_test",
    srcs = ["test/server_test.py"],
    data = [
        ":server",
        "test/color.png",
        "test/depth.png",
        "test/label.png",
        "test/two_rgba_boxes.gltf",
    ],
    deps = [
        ":unittest_path_cleaner",
        "@test_requirements_numpy//:pkg",
        "@test_requirements_pillow//:pkg",
        "@test_requirements_requests//:pkg",
    ],
)

pycodestyle_test(
    name = "pycodestyle_test",
    srcs = [
        "bazel",
        "server.py",
        "test/server_test.py",
        "test/unittest_path_cleaner.py",
    ],
)

compile_pip_requirements(
    name = "requirements",
    requirements_in = "requirements.in",
    requirements_txt = "requirements.txt",
    tags = ["manual"],
)

compile_pip_requirements(
    name = "test_requirements",
    requirements_in = "test/requirements.in",
    requirements_txt = "test/requirements.txt",
    tags = ["manual"],
)
